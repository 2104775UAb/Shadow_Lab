<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAA+
        DwAAAk1TRnQBSQFMAwEBAAEoAQABKAEAASABAAEgAQAE/wERAQAI/wFCAU0BNgcAATYDAAEoAwABgAMA
        ASADAAEBAQABEAYAASAgAAH/AX8B3gF7AZsBbwFWAVsBEwFLAREBQwERAUMBEQFDAREBQwERAUMBEQFD
        AREBQwERAUMBEgFLATUBUwGaAWsB3QF3Af8Bf9oAAf8BfwE1AVcBhgEWAecBFgHGARYBpgEWAaYBFgGm
        ARYBpgEWAaYBFgGmARYBpgEWAaYBFgGmARYBpgEWAcYBFgHnARYBpwEWAc8BOgHeAXvWAAGbAW8B7AEu
        AcYBFgHGARYBpgEWAaYBFgGmARYBpgEWAaYBFgGmARYBpgEWAaYBFgGmARYBpgEWAaYBFgGmARYBpgEW
        AaYBFgGmARYBxwEWAckBIgFWAVsB/wF/0AABWAFjAccBFgGmARYBpgEWAaYBFgGmARoBpgEaAcYBGgHG
        ARoBxgEaAcYBGgHGARoBxgEaAcYBGgHGARoBxgEaAcYBGgHGARoBpgEaAaYBGgGmARYBpgEWAecBGgHw
        AT7OAAF5AWMBxwEaAcYBGgHGARoBxgEaAcYBGgHGARoBxgEaAcYBGgHGARoBxgEaAcYBHgHGAR4BxgEe
        AcYBHgHGAR4BxgEaAcYBGgHGARoBxgEaAcYBGgHGARoBxgEaAaYBGgHGARoBEAFDAf8Bf8gAAd4BewHI
        AR4BpgEaAcYBGgHGARoBxgEaAcYBGgHGAR4BxgEeAccBHgHHAR4BxwEeAccBHgHHAR4BxwEeAccBHgHH
        AR4BxwEeAcYBHgHGAR4BxgEeAcYBHgHGARoBxgEaAcYBGgHGARoB5wEaAXcBX8YAAf8BfwHtATIBxwEa
        AcYBGgHGARoBxgEeAcYBHgHHAR4BxwEeAccBHgHHASIB5wEiAecBIgHnASIB5wEiAecBIgHnASIB5wEi
        AecBIgHHAR4BxwEeAccBHgHHAR4BxwEeAcYBHgHGAR4BxgEaAcYBGgHqASoB/gF7xAABuwFvAQcBHwHG
        ARoBxgEeAccBHgHHAR4BxwEeAecBIgHnASIB5wEiAecBIgHnASYB5wEiAecBJgHnASIB5wEiAecBIgHn
        ASIB5wEiAecBIgHnASIB5wEiAecBIgHHAR4BxwEeAccBHgHHAR4BxgEeAecBGgESAUfEAAFUAVMBxwEe
        AccBHgHHAR4B5wEiAecBIgHnASIB5wEiAecBIgHnASYBxgEiAWIBEgFjARIBYwESAaUBHgHnASoB5wEm
        AecBJgHnASYB5wEmAecBJgHnASYB5wEiAecBIgHnASIB5wEiAccBHgHHAR4BxwEeAecBHgHeAXvCAAEN
        ATcBxwEeAecBIgHnASIB5wEiAecBIgHnASYB5wEmAecBJgHnASYBYwESAc0BOgEUAVMB8QFKAYQBFgHF
        ASIBBwErAecBKgHnASoB5wEqAecBJgHnASYB5wEmAecBJgHnASYB5wEiAecBIgHnASIBxwEeAQcBIwG7
        AW/AAAH/AX8B6AEmAecBIgHnASIB5wEmAecBJgHnASYB5wEmAQcBKwHmASIBYwESAfABRgGdAXcBvgF7
        Ab4BewE2AVsBhQEaAcUBIgEHAS8BBwErAQcBKwEHASsBBwErAecBKgHnASoB5wEmAecBJgHnASYB5wEi
        AecBIgHnASIBmAFjwAAB3gF7AecBIgHnASIB5wEmAecBJgHnASYB5wEqAQcBKwEHASsBgwEWARIBSwG9
        AXcB/wF/Af8BfwH/AX8B3wF7ATkBZwGkARoB5gEmAQcBMwEHAS8BBwEvAQcBLwEHASsBBwErAQcBKwHn
        ASoB5wEmAecBJgHnASYB5wEiAXUBW8AAAd0BdwEHAScB5wEmAecBJgHnASoBBwErAQcBLwHmASYBgwEW
        AfABRgG9AXcB/wF/Af8BfwH/AX8B/wF/Af8BfwHfAXsBNgFbAaUBHgHlASYBJwEzAQcBMwEHATMBBwEv
        AQcBLwEHAS8BBwErAQcBKwHnASoB5wEmAecBJgF1AVvAAAHdAXcBBwEnAecBJgEHASsBBwErAQcBLwEH
        ATMBowEWARIBSwG9AXcB/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/Ad8BewE5AWcBxAEeAQYBLwEn
        ATcBBwEzAQcBMwEHATMBBwEzAQcBLwEHAS8BBwErAQcBKwHnASYBlQFbwAAB3QF3AQcBKwEHASsBBwEv
        AQcBLwEHATMBBwEzAQ8BRwG+AXsB/wF/Af8BfwH/AX8B2wFzAUwBRwG0AWMB/wF/Af8BfwH/AX8B3wF7
        AVYBXwHEAR4B5QEqAScBOwEnATcBJwE3AQcBMwEHATMBBwEvAQcBLwEHASsBBwErAZUBW8AAAd0BdwEH
        AS8BBwEvAQcBMwEHATMBBwEzAScBNwFNAUcB/wF/Af8BfwH/AX8B2wFzASYBOwEnAT8BJgE7AbQBYwH/
        AX8B/wF/Af8BfwHfAXsBWQFnAcQBIgEGATMBKAE7AScBNwEnATcBJwE3AQcBMwEHATMBBwEvAQcBLwGV
        AV/AAAHdAXcBJwEzAQcBMwEHATMBJwE3AScBNwEnATsBJwE7AW0BTwH9AXcB2wFzAUoBRwFIAUMBSAFD
        AUgBQwFIAUMBtAFjAf8BfwH/AX8B/wF/Ad8BfwFWAV8BxAEiAQUBLwEnAT8BJwE7AScBNwEnATcBBwEz
        AQcBMwEHAS8BlQFfwAAB3QF3AScBMwEHATMBJwE3AScBNwEnATsBJwE7ASgBPwEoAT8BSQFDAScBQwFI
        AUMBSAFHAUgBRwFIAUcBSAFHAUYBQwG1AWcB/wF/Af8BfwH/AX8B3wF/AVoBawHEASIBBgEzASgBPwEn
        ATsBJwE7AScBNwEnATcBBwEzAZUBX8AAAd0BewEnATcBJwE3AScBNwEnATsBJwE/ASgBPwFIAUMBSAFD
        AkcBSAFHAUgBSwFIAUsBSAFLAUgBSwFIAUsBSAFLAUgBTwG1AWsB/wF/Af8BfwH/AX8B3wF/AVYBXwHE
        ASIBJgE7ASgBPwEnATsBJwE7AScBNwEnATcBlQFfwAAB3QF7ASgBOwEnATcBJwE7ASgBPwEoAUMBSAFD
        AUgBRwFIAUcBSAFLAUgBTwFIAU8BSAFPAUgBTwFIAU8BaAFTAWgBUwFoAVMBRgFLAbUBawH/AX8B/wF/
        Af8BfwHfAX8BWQFnAUgBQwEnAUMBKAE/AScBOwEnATsBJwE3AZUBY8AAAf4BfwEoATsBJwE7ASgBPwEo
        AUMBSAFDAUgBRwFIAUsBSAFLAUgBTwFIAU8BaAFTAWgBUwFoAVMBaAFTAWgBUwFoAVMBaAFTAWgBUwFo
        AVMBtQFrAf8BfwH/AX8B/wF/AZMBYwJHAUgBRwFIAUMBKAE/AScBPwEnATsBlwFnwgABSwFHAScBPwEo
        AUMBSAFDAUgBRwFIAUsBSAFLAUgBTwFoAVMBaAFTAWgBUwFoAVcBaAFXAWgBVwFoAVcBaAFXAWgBVwFo
        AVcBaAFXAWYBUwG1AWsB/wF/AbQBZwFGAUsBSAFLAUgBRwFIAUcBSAFDASgBPwFIAT8BugFvwgABkgFf
        ASgBPwFIAUMBSAFHAUgBSwFIAU8BSAFPAWgBUwFoAVMBaAFXAWgBVwFoAVcBaAFbAWgBWwFoAVsBaAFb
        AWgBWwFoAVsBaAFbAWgBVwFpAVcBjgFfAWgBUwFoAVMBSAFPAUgBSwFIAUsBSAFHASgBQwGJAUsB3QF7
        wgABuAFvAUgBQwFIAUcBSAFLAUgBTwFIAU8BaAFTAWgBVwFoAVcBaAFXAWgBWwFoAVsBaAFbAWkBWwFp
        AVsBaQFbAWkBWwFpAVsBaAFbAWgBWwFoAVcBaAFXAWgBVwFoAVMBaAFTAUgBTwFIAUsBSAFHAUgBRwFr
        AVMB/wF/wgAB3gF7AYoBUwFIAUsBSAFLAUgBTwFoAVMBaAFXAWgBVwFoAVsBaAFbAWgBWwGJAV8BiAFf
        AYkBXwGJAV8BiQFfAYkBXwGJAV8BiAFfAWgBWwFoAVsBaAFbAWgBVwFoAVcBaAFTAWgBUwFIAU8BSAFL
        AWkBTwHbAXfGAAG4AW8BiQFTAUgBTwFoAVMBaAFXAWgBVwFoAVsBaAFbAWgBWwGIAV8BiQFfAYkBXwGJ
        AWMBiQFjAYkBYwGJAWMBiQFfAYkBXwGIAV8BiAFfAWgBWwFoAVsBaAFXAWgBVwFoAVMBSAFTAUgBSwGx
        AWfIAAH/AX8BsgFnAWgBUwFoAVMBaAFXAWgBVwFoAVsBaAFbAYgBXwGJAV8BiQFjAYkBYwGJAWMBiQFj
        AYkBYwGJAWMBiQFjAYkBYwGJAWMBiAFfAYgBXwFoAVsBaAFbAWgBVwFoAVcBaAFTAYoBXwHdAXvKAAH+
        AX8BqwFjAYgBVwFoAVcBaAFbAWgBWwGIAV8BiQFfAYkBYwGJAWMBiQFjAYkBZwGJAWcBiQFnAYkBZwGJ
        AWcBiQFjAYkBYwGJAWMBiAFfAWgBXwFoAVsBaAFbAWgBVwGqAV8B3AF7zgAB/gF/AbMBbwGqAWMBaAFb
        AWgBXwGIAV8BiAFjAYkBYwGJAWMBiQFnAYkBZwGJAWcBiQFnAYkBZwGJAWcBiQFnAYkBYwGJAWMBiQFf
        AYgBXwFoAVsBiQFfAa4BZwHbAXfSAAH/AX8BuAFzAcwBawGpAWMBiQFfAYgBYwGJAWMBiQFnAYkBZwGJ
        AWcBiQFnAYkBZwGJAWcBiQFnAYkBZwGJAWMBiAFjAYgBYwGJAWMB6wFrAbMBbwH/AX/YAAH+AXsB2QF3
        AdMBcwGuAW8BqwFrAaoBbwGqAW8BqwFvAcsBbwHLAW8BqwFvAasBbwGqAW8BqgFrAawBawHRAXMB1wF3
        AdwBewH/AX/iAAH+AX8B3QF7Ad0BewHdAXsB3QF7Ad0BewHdAXsB3QF7Ad0BewH+AX8B/wF/1AABQgFN
        AT4HAAE+AwABKAMAAYADAAEgAwABAQEAAQEGAAECFgAD/wEAAf4CAAF/DAAB/AIAAT8MAAH4AgABDwwA
        AfACAAEPDAAB4AIAAQMMAAHAAgABAwwAAYACAAEBDAABgAIAAQEMAAGADwABgL8AAYAPAAGADwABgA8A
        AYACAAEBDAABwAIAAQMMAAHAAgABAwwAAeACAAEHDAAB8AIAAQ8MAAH4AgABHwwAAf4CAAE/DAAB/wHg
        AQMB/wwACw==
</value>
  </data>
</root>